<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.door.dao.devDeviceinfoMapper">
    <resultMap id="BaseResultMap" type="com.security.door.entity.devDeviceinfo">
        <id column="guid" jdbcType="VARCHAR" property="guid"/>
        <result column="clientname" jdbcType="VARCHAR" property="clientname"/>
        <result column="devicename" jdbcType="VARCHAR" property="devicename"/>
        <result column="devicecode" jdbcType="INTEGER" property="devicecode"/>
        <result column="devicetypecode" jdbcType="VARCHAR" property="devicetypecode"/>
        <result column="typename" jdbcType="VARCHAR" property="typename"/>
        <result column="ipaddress" jdbcType="VARCHAR" property="ipaddress"/>
        <result column="deviceport" jdbcType="INTEGER" property="deviceport"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="devicetopic" jdbcType="VARCHAR" property="devicetopic"/>
        <result column="single" jdbcType="BIT" property="single"/>
        <result column="parentid" jdbcType="VARCHAR" property="parentid"/>
        <result column="parentname" jdbcType="VARCHAR" property="parentname"/>
        <result column="sessiontime" jdbcType="TIMESTAMP" property="sessiontime"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
    </resultMap>
    <resultMap id="TreeBaseResultMap" type="com.security.door.entity.treeView">
        <id column="guid" jdbcType="VARCHAR" property="guid"/>
        <result column="devicename" jdbcType="VARCHAR" property="text"/>
        <result column="devicecode" jdbcType="INTEGER" property="id"/>
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="devicetypecode" jdbcType="VARCHAR" property="code"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="parentid" jdbcType="INTEGER" property="parentid"/>
        <result column="single" jdbcType="BIT" property="single"/>
        <result column="devicetopic" jdbcType="VARCHAR" property="devicetopic"/>
    </resultMap>
    <resultMap id="statisticResultMap" type="com.security.door.entity.statisticData">
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="total" jdbcType="INTEGER" property="qty"/>
    </resultMap>
    <sql id="Base_Column_List">
        guid, devicename, devicecode, devicetypecode, ipaddress, deviceport,
        icon, sn, devicetopic, single, parentid, sessiontime,creator, createTime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dev_deviceinfo
        where guid = #{guid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from dev_deviceinfo
        where guid in ( ${value} )
    </delete>
    <insert id="insert" parameterType="com.security.door.entity.devDeviceinfo">
        insert into dev_deviceinfo (guid, devicename, devicecode,
        devicetypecode, ipaddress,
        deviceport, icon, sn,
        devicetopic, single, parentid,
        creator, createTime)
        values (#{guid,jdbcType=VARCHAR}, #{devicename,jdbcType=VARCHAR}, #{devicecode,jdbcType=VARCHAR},
        #{devicetypecode,jdbcType=VARCHAR}, #{ipaddress,jdbcType=VARCHAR},
        #{deviceport,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR},
        #{devicetopic,jdbcType=VARCHAR}, #{single,jdbcType=INTEGER}, #{parentid,jdbcType=VARCHAR},
        #{sessiontime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.security.door.entity.devDeviceinfo">
        insert into dev_deviceinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="guid != null">
                guid,
            </if>
            <if test="devicename != null">
                devicename,
            </if>
            <if test="devicecode != null">
                devicecode,
            </if>
            <if test="devicetypecode != null">
                devicetypecode,
            </if>
            <if test="ipaddress != null">
                ipaddress,
            </if>
            <if test="deviceport != null">
                deviceport,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="sn != null">
                sn,
            </if>
            <if test="devicetopic != null">
                devicetopic,
            </if>
            <if test="single != null">
                single,
            </if>
            <if test="parentid != null">
                parentid,
            </if>
            <if test="sessiontime != null">
                sessiontime,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="guid != null">
                #{guid,jdbcType=VARCHAR},
            </if>
            <if test="devicename != null">
                #{devicename,jdbcType=VARCHAR},
            </if>
            <if test="devicecode != null">
                #{devicecode,jdbcType=VARCHAR},
            </if>
            <if test="devicetypecode != null">
                #{devicetypecode,jdbcType=VARCHAR},
            </if>
            <if test="ipaddress != null">
                #{ipaddress,jdbcType=VARCHAR},
            </if>
            <if test="deviceport != null">
                #{deviceport,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="sn != null">
                #{sn,jdbcType=VARCHAR},
            </if>
            <if test="devicetopic != null">
                #{devicetopic,jdbcType=VARCHAR},
            </if>
            <if test="single != null">
                #{single,jdbcType=INTEGER},
            </if>
            <if test="parentid != null">
                #{parentid,jdbcType=VARCHAR},
            </if>
            <if test="sessiontime != null">
                #{sessiontime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.security.door.entity.devDeviceinfo">
        update dev_deviceinfo
        <set>
            <if test="devicename != null">
                devicename = #{devicename,jdbcType=VARCHAR},
            </if>
            <if test="devicecode != null">
                devicecode = #{devicecode,jdbcType=VARCHAR},
            </if>
            <if test="devicetypecode != null">
                devicetypecode = #{devicetypecode,jdbcType=VARCHAR},
            </if>
            <if test="ipaddress != null">
                ipaddress = #{ipaddress,jdbcType=VARCHAR},
            </if>
            <if test="deviceport != null">
                deviceport = #{deviceport,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="sn != null">
                sn = #{sn,jdbcType=VARCHAR},
            </if>
            <if test="devicetopic != null">
                devicetopic = #{devicetopic,jdbcType=VARCHAR},
            </if>
            <if test="single != null">
                single = #{single,jdbcType=INTEGER},
            </if>
            <if test="parentid != null">
                parentid = #{parentid,jdbcType=VARCHAR},
            </if>
            <if test="sessiontime != null">
                sessiontime = #{sessiontime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where guid = #{guid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.security.door.entity.devDeviceinfo">
        update dev_deviceinfo
        set devicename = #{devicename,jdbcType=VARCHAR},
        devicecode = #{devicecode,jdbcType=VARCHAR},
        devicetypecode = #{devicetypecode,jdbcType=VARCHAR},
        ipaddress = #{ipaddress,jdbcType=VARCHAR},
        deviceport = #{deviceport,jdbcType=INTEGER},
        icon = #{icon,jdbcType=VARCHAR},
        sn = #{sn,jdbcType=VARCHAR},
        devicetopic = #{devicetopic,jdbcType=VARCHAR},
        single = #{single,jdbcType=INTEGER},
        parentid = #{parentid,jdbcType=VARCHAR},
        sessiontime = #{sessiontime,jdbcType=TIMESTAMP},
        creator = #{creator,jdbcType=VARCHAR},
        createTime = #{createtime,jdbcType=TIMESTAMP}
        where guid = #{guid,jdbcType=VARCHAR}
    </update>
    <sql id="Select_Pageing_List">
        (SELECT df.*,CONCAT(devparent.sn,' - ',devparent.devicename) as parentname, tp.deviceTypeName
        typename FROM
        (
        SELECT * FROM dev_deviceinfo WHERE devicetypecode IS NOT NULL
        <if test="entity.clientcode != null">
            and sn in (select sn from dev_deviceaccess where clientcode = #{entity.clientcode,jdbcType=VARCHAR}
            or clientcode in(select groupcode from cr_clientgroup where clientcode =
            #{entity.clientcode,jdbcType=VARCHAR} )
            )
        </if>
        ) df
        LEFT JOIN dev_devicetype tp ON df.devicetypecode = tp.deviceTypeCode
        LEFT JOIN dev_deviceinfo devparent ON df.parentid = devparent.devicecode
        ) t
        WHERE 1 = 1
        <if test="entity.devicename != null">
            and devicename like CONCAT('%',#{entity.devicename},'%')
        </if>
    </sql>
    <select id="selectList" parameterType="com.security.door.pager.DatatablesView" resultMap="BaseResultMap">
        SELECT * FROM
        <include refid="Select_Pageing_List"/>
        limit #{start},#{length}
    </select>
    <select id="getCount" resultType="java.lang.Integer" parameterType="com.security.door.pager.DatatablesView">
        SELECT COUNT(0) FROM
        <include refid="Select_Pageing_List"/>
    </select>
    <select id="selectTreeData" parameterType="java.util.Map" resultMap="TreeBaseResultMap">
        select * from dev_deviceinfo where FIND_IN_SET(devicecode,getDevChildList(#{devicecode,jdbcType=INTEGER}));
    </select>
    <select id="statisticDeviceinfo" parameterType="java.lang.String" resultMap="statisticResultMap">
        SELECT
        deviceTypeName as name,
        COUNT(*) AS total
        FROM
        (
        SELECT
        a.devicetypecode,
        a.devicename,
        b.deviceTypeName
        FROM
        dev_deviceinfo a
        LEFT JOIN dev_devicetype b ON a.devicetypecode = b.deviceTypeCode
        ) c
        GROUP BY
        c.devicetypecode
    </select>
    <select id="attachstatistic" parameterType="java.lang.String" resultMap="statisticResultMap">
        select count(*) as total,createtime as name from key_attach group by createtime;
    </select>
    <select id="selectLeaderNode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from dev_deviceinfo where FIND_IN_SET(devicecode,getDevParList(#{devicecode,jdbcType=INTEGER})) and
        single = 1;
    </select>
    <select id="selectDeviceBySn" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from dev_deviceinfo where sn = #{sn,jdbcType=VARCHAR};
    </select>
    <select id="selectAllTree" resultMap="TreeBaseResultMap">
        select * from dev_deviceinfo where FIND_IN_SET(devicecode,getDevChildList(0));
    </select>
    <select id="selectMaxDeviceCode" resultType="java.lang.Integer">
        SELECT IFNULL(MAX(cast(devicecode as SIGNED INTEGER)),0) + 1 FROM dev_deviceinfo
    </select>
    <select id="selectTreeByClientCode" parameterType="java.lang.String" resultMap="TreeBaseResultMap">
        select * from (
        select * from dev_deviceinfo where FIND_IN_SET(devicecode,getDevChildList(0))
        ) a
        where sn in (
        select sn from dev_deviceaccess where clientcode = #{clientcode,jdbcType=VARCHAR}
        )
    </select>
    <select id="selectAccessAllByClientCode" parameterType="java.lang.String" resultMap="TreeBaseResultMap">
        select * from (
        select * from dev_deviceinfo where FIND_IN_SET(devicecode,getDevChildList(0))
        ) a
        where sn in (select sn from dev_deviceaccess where clientcode = #{clientcode,jdbcType=VARCHAR}
        or clientcode in(select groupcode from cr_clientgroup where clientcode = #{clientcode,jdbcType=VARCHAR})
        )
    </select>
    <select id="selectListByClientCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT df.*,tp.deviceTypeName as typename,CONCAT(devparent.sn,' - ',devparent.devicename) as parentname FROM (
        select * from (
        select * from dev_deviceinfo where FIND_IN_SET(devicecode,getDevChildList(0))
        ) a
        where sn in (select sn from dev_deviceaccess where clientcode = #{clientcode,jdbcType=VARCHAR}
        or clientcode in(select groupcode from cr_clientgroup where clientcode = #{clientcode,jdbcType=VARCHAR})
        )) df
        LEFT JOIN dev_devicetype tp ON df.devicetypecode = tp.deviceTypeCode
        LEFT JOIN dev_deviceinfo devparent ON df.parentid = devparent.devicecode
    </select>
    <delete id="deleteBySn" parameterType="java.lang.String">
        delete from dev_deviceinfo
        where sn = #{sn,jdbcType=VARCHAR}
    </delete>
</mapper>