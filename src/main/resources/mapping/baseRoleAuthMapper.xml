<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.door.dao.baseRoleAuthMapper">
    <resultMap id="BaseResultMap" type="com.security.door.entity.baseRoleAuth">
        <result column="guid" jdbcType="VARCHAR" property="guid"/>
        <result column="rolecode" jdbcType="VARCHAR" property="rolecode"/>
        <result column="menuid" jdbcType="VARCHAR" property="menuid"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="creatdate" jdbcType="TIMESTAMP" property="creatdate"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <resultMap id="TreeBaseResultMap" type="com.security.door.entity.treeData">
        <id column="guid" jdbcType="VARCHAR" property="guid"/>
        <result column="text" jdbcType="VARCHAR" property="text"/>
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="pid" jdbcType="VARCHAR" property="pid"/>
    </resultMap>
    <sql id="Base_Column_List">
        guid, rolecode, menuid, creator, creatdate, remark
    </sql>

    <insert id="insertAuth" parameterType="java.util.List">
        insert into base_roleauth (guid, rolecode, menuid,
        creator, creatdate, remark
        )
        values
        <foreach collection="list" item="item" separator=",">
            ( #{item.guid,jdbcType=VARCHAR},
            #{item.rolecode,jdbcType=VARCHAR},
            #{item.menuid,jdbcType=VARCHAR},
            #{item.creator,jdbcType=VARCHAR},
            #{item.creatdate,jdbcType=TIMESTAMP},
            #{item.remark,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <delete id="deleteMore" parameterType="java.util.Map">
        DELETE FROM base_roleauth
        WHERE
        rolecode=#{rolecode} AND menuid in (${menuidlist})
    </delete>
    <insert id="insertSelective" parameterType="com.security.door.entity.baseRoleAuth">
        insert into base_roleauth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="guid != null">
                guid,
            </if>
            <if test="rolecode != null">
                rolecode,
            </if>
            <if test="menuid != null">
                menuid,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="creatdate != null">
                creatdate,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="guid != null">
                #{guid,jdbcType=VARCHAR},
            </if>
            <if test="rolecode != null">
                #{rolecode,jdbcType=VARCHAR},
            </if>
            <if test="menuid != null">
                #{menuid,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="creatdate != null">
                #{creatdate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <delete id="deleteByRoleCode" parameterType="java.lang.String">
        DELETE FROM base_roleauth
        WHERE rolecode=#{rolecode,jdbcType=VARCHAR}
    </delete>
    <select id="selectAuth" parameterType="java.lang.String" resultMap="TreeBaseResultMap">
        select bm.guid as guid,br.menuid as id,bm.menuname as text,bm.parentid as pid FROM base_menu bm
        join base_roleauth br
        on bm.guid = br.menuid
        where br.rolecode = #{rolecode,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByMenuId" parameterType="com.security.door.entity.baseRoleAuth">
        DELETE FROM base_roleauth
        WHERE rolecode=#{rolecode,jdbcType=VARCHAR} AND menuid=#{menuid,jdbcType=VARCHAR}
    </delete>
    <select id="selectTree" resultMap="TreeBaseResultMap" parameterType="java.lang.String">
        select bm.guid as guid,bm.menuid as id ,bm.menuname as text ,bm.parentid as pid from base_menu bm join
        base_roleauth br on bm.guid = br.menuid where br.rolecode = #{rolecode,jdbcType=VARCHAR}
    </select>
    <select id="selectAllTree" parameterType="java.util.Map" resultMap="TreeBaseResultMap">
        SELECT guid as guid,menuid as id,menuname as text,parentid as pid
        from base_menu
        WHERE 1=1
        <if test="rolecode != null">
            AND guid in(select menuid from base_roleauth where rolecode = #{rolecode,jdbcType=VARCHAR})
        </if>
    </select>
</mapper>